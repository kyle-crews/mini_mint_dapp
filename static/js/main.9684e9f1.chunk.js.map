{"version":3,"sources":["redux/blockchain/blockchainReducer.js","redux/data/dataReducer.js","redux/store.js","redux/data/dataActions.js","redux/blockchain/blockchainActions.js","styles/globalStyles.js","App.js","reportWebVitals.js","index.js"],"names":["initialState","loading","account","smartContract","web3","errorMsg","blockchainReducer","state","action","type","payload","totalSupply","cost","error","dataReducer","rootReducer","combineReducers","blockchain","data","middleware","thunk","composeEnhancers","compose","applyMiddleware","store","createStore","fetchDataFailed","fetchData","dispatch","a","getState","methods","call","console","log","connectFailed","updateAccount","Screen","styled","div","image","SpacerXSmall","SpacerSmall","SpacerMedium","SpacerLarge","Container","flex","fd","jc","ai","test","TextTitle","p","TextDescription","StyledButton","button","StyledRoundButton","ResponsiveWrapper","StyledImg","img","StyledLink","App","input","len","useDispatch","useSelector","useState","claimingNft","setClaimingNft","feedback","setFeedback","mintAmount","setMintAmount","CONTRACT_ADDRESS","SCAN_LINK","NETWORK","NAME","SYMBOL","ID","NFT_NAME","MAX_SUPPLY","WEI_COST","DISPLAY_COST","GAS_LIMIT","MARKETPLACE","MARKETPLACE_LINK","SHOW_BACKGROUND","CONFIG","SET_CONFIG","getData","getConfig","fetch","headers","Accept","configResponse","json","config","useEffect","style","padding","backgroundColor","alt","src","borderRadius","border","boxShadow","textAlign","fontSize","fontWeight","color","target","href","length","substring","Number","onClick","e","preventDefault","abiResponse","abi","window","ethereum","isMetaMask","Web3EthContract","setProvider","Web3","request","method","accounts","SmartContractObj","on","location","reload","lineHeight","disabled","newMintAmount","decrementMintAmount","incrementMintAmount","gasLimit","totalCostWei","String","totalGasLimit","mint","send","to","from","value","once","err","then","receipt","claimNFTs","width","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9684e9f1.chunk.js","sourcesContent":["const initialState = {\r\n  loading: false,\r\n  account: null,\r\n  smartContract: null,\r\n  web3: null,\r\n  errorMsg: \"\",\r\n};\r\n\r\nconst blockchainReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"CONNECTION_REQUEST\":\r\n      return {\r\n        ...initialState,\r\n        loading: true,\r\n      };\r\n    case \"CONNECTION_SUCCESS\":\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        account: action.payload.account,\r\n        smartContract: action.payload.smartContract,\r\n        web3: action.payload.web3,\r\n      };\r\n    case \"CONNECTION_FAILED\":\r\n      return {\r\n        ...initialState,\r\n        loading: false,\r\n        errorMsg: action.payload,\r\n      };\r\n    case \"UPDATE_ACCOUNT\":\r\n      return {\r\n        ...state,\r\n        account: action.payload.account,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default blockchainReducer;\r\n","const initialState = {\r\n  loading: false,\r\n  totalSupply: 0,\r\n  cost: 0,\r\n  error: false,\r\n  errorMsg: \"\",\r\n};\r\n\r\nconst dataReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"CHECK_DATA_REQUEST\":\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: false,\r\n        errorMsg: \"\",\r\n      };\r\n    case \"CHECK_DATA_SUCCESS\":\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        totalSupply: action.payload.totalSupply,\r\n        // cost: action.payload.cost,\r\n        error: false,\r\n        errorMsg: \"\",\r\n      };\r\n    case \"CHECK_DATA_FAILED\":\r\n      return {\r\n        ...initialState,\r\n        loading: false,\r\n        error: true,\r\n        errorMsg: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default dataReducer;\r\n","import { applyMiddleware, compose, createStore, combineReducers } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport blockchainReducer from \"./blockchain/blockchainReducer\";\r\nimport dataReducer from \"./data/dataReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  blockchain: blockchainReducer,\r\n  data: dataReducer,\r\n});\r\n\r\nconst middleware = [thunk];\r\nconst composeEnhancers = compose(applyMiddleware(...middleware));\r\n\r\nconst configureStore = () => {\r\n  return createStore(rootReducer, composeEnhancers);\r\n};\r\n\r\nconst store = configureStore();\r\n\r\nexport default store;\r\n","// log\r\nimport store from \"../store\";\r\n\r\nconst fetchDataRequest = () => {\r\n  return {\r\n    type: \"CHECK_DATA_REQUEST\",\r\n  };\r\n};\r\n\r\nconst fetchDataSuccess = (payload) => {\r\n  return {\r\n    type: \"CHECK_DATA_SUCCESS\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nconst fetchDataFailed = (payload) => {\r\n  return {\r\n    type: \"CHECK_DATA_FAILED\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nexport const fetchData = () => {\r\n  return async (dispatch) => {\r\n    dispatch(fetchDataRequest());\r\n    try {\r\n      let totalSupply = await store\r\n        .getState()\r\n        .blockchain.smartContract.methods.totalSupply()\r\n        .call();\r\n      // let cost = await store\r\n      //   .getState()\r\n      //   .blockchain.smartContract.methods.cost()\r\n      //   .call();\r\n\r\n      dispatch(\r\n        fetchDataSuccess({\r\n          totalSupply,\r\n          // cost,\r\n        })\r\n      );\r\n    } catch (err) {\r\n      console.log(err);\r\n      dispatch(fetchDataFailed(\"Could not load data from contract.\"));\r\n    }\r\n  };\r\n};\r\n","// constants\r\nimport Web3EthContract from \"web3-eth-contract\";\r\nimport Web3 from \"web3\";\r\n// log\r\nimport { fetchData } from \"../data/dataActions\";\r\n\r\nconst connectRequest = () => {\r\n  return {\r\n    type: \"CONNECTION_REQUEST\",\r\n  };\r\n};\r\n\r\nconst connectSuccess = (payload) => {\r\n  return {\r\n    type: \"CONNECTION_SUCCESS\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nconst connectFailed = (payload) => {\r\n  return {\r\n    type: \"CONNECTION_FAILED\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nconst updateAccountRequest = (payload) => {\r\n  return {\r\n    type: \"UPDATE_ACCOUNT\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nexport const connect = () => {\r\n  return async (dispatch) => {\r\n    dispatch(connectRequest());\r\n    const abiResponse = await fetch(\"/config/abi.json\", {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    });\r\n    const abi = await abiResponse.json();\r\n    const configResponse = await fetch(\"/config/config.json\", {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    });\r\n    const CONFIG = await configResponse.json();\r\n    const { ethereum } = window;\r\n    const metamaskIsInstalled = ethereum && ethereum.isMetaMask;\r\n    if (metamaskIsInstalled) {\r\n      Web3EthContract.setProvider(ethereum);\r\n      let web3 = new Web3(ethereum);\r\n      try {\r\n        const accounts = await ethereum.request({\r\n          method: \"eth_requestAccounts\",\r\n        });\r\n        const networkId = await ethereum.request({\r\n          method: \"net_version\",\r\n        });\r\n        if (networkId == CONFIG.NETWORK.ID) {\r\n          const SmartContractObj = new Web3EthContract(\r\n            abi,\r\n            CONFIG.CONTRACT_ADDRESS\r\n          );\r\n          dispatch(\r\n            connectSuccess({\r\n              account: accounts[0],\r\n              smartContract: SmartContractObj,\r\n              web3: web3,\r\n            })\r\n          );\r\n          // Add listeners start\r\n          ethereum.on(\"accountsChanged\", (accounts) => {\r\n            dispatch(updateAccount(accounts[0]));\r\n          });\r\n          ethereum.on(\"chainChanged\", () => {\r\n            window.location.reload();\r\n          });\r\n          // Add listeners end\r\n        } else {\r\n          dispatch(connectFailed(`Change network to ${CONFIG.NETWORK.NAME}.`));\r\n        }\r\n      } catch (err) {\r\n        dispatch(connectFailed(\"Something went wrong.\"));\r\n      }\r\n    } else {\r\n      dispatch(connectFailed(\"Install Metamask.\"));\r\n    }\r\n  };\r\n};\r\n\r\nexport const updateAccount = (account) => {\r\n  return async (dispatch) => {\r\n    dispatch(updateAccountRequest({ account: account }));\r\n    dispatch(fetchData(account));\r\n  };\r\n};\r\n","import styled from \"styled-components\";\r\n\r\n// Used for wrapping a page component\r\nexport const Screen = styled.div`\r\n  background-color: var(--primary);\r\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\r\n  background-size: cover;\r\n  background-position: center;\r\n  width: 100%;\r\n  min-height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\n// Used for providing space between components\r\nexport const SpacerXSmall = styled.div`\r\n  height: 8px;\r\n  width: 8px;\r\n`;\r\n\r\n// Used for providing space between components\r\nexport const SpacerSmall = styled.div`\r\n  height: 16px;\r\n  width: 16px;\r\n`;\r\n\r\n// Used for providing space between components\r\nexport const SpacerMedium = styled.div`\r\n  height: 24px;\r\n  width: 24px;\r\n`;\r\n\r\n// Used for providing space between components\r\nexport const SpacerLarge = styled.div`\r\n  height: 32px;\r\n  width: 32px;\r\n`;\r\n\r\n// Used for providing a wrapper around a component\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex: ${({ flex }) => (flex ? flex : 0)};\r\n  flex-direction: ${({ fd }) => (fd ? fd : \"column\")};\r\n  justify-content: ${({ jc }) => (jc ? jc : \"flex-start\")};\r\n  align-items: ${({ ai }) => (ai ? ai : \"flex-start\")};\r\n  background-color: ${({ test }) => (test ? \"pink\" : \"none\")};\r\n  width: 100%;\r\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\r\n  background-size: cover;\r\n  background-position: center;\r\n`;\r\n\r\nexport const TextTitle = styled.p`\r\n  color: var(--primary-text);\r\n  font-size: 22px;\r\n  font-weight: 500;\r\n  line-height: 1.6;\r\n`;\r\n\r\nexport const TextSubTitle = styled.p`\r\n  color: var(--primary-text);\r\n  font-size: 18px;\r\n  line-height: 1.6;\r\n`;\r\n\r\nexport const TextDescription = styled.p`\r\n  color: var(--primary-text);\r\n  font-size: 16px;\r\n  line-height: 1.6;\r\n`;\r\n\r\nexport const StyledClickable = styled.div`\r\n  :active {\r\n    opacity: 0.6;\r\n  }\r\n`;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { connect } from \"./redux/blockchain/blockchainActions\";\r\nimport { fetchData } from \"./redux/data/dataActions\";\r\nimport * as s from \"./styles/globalStyles\";\r\nimport styled from \"styled-components\";\r\n\r\nconst truncate = (input, len) =>\r\n    input.length > len ? `${input.substring(0, len)}...` : input;\r\n\r\nexport const StyledButton = styled.button `\r\n  padding: 10px;\r\n  border-radius: 50px;\r\n  border: none;\r\n  background-color: var(--secondary);\r\n  padding: 10px;\r\n  font-weight: bold;\r\n  color: var(--secondary-text);\r\n  width: 100px;\r\n  cursor: pointer;\r\n  box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\r\n  -webkit-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\r\n  -moz-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\r\n  :active {\r\n    box-shadow: none;\r\n    -webkit-box-shadow: none;\r\n    -moz-box-shadow: none;\r\n  }\r\n`;\r\n\r\nexport const StyledRoundButton = styled.button `\r\n  padding: 10px;\r\n  border-radius: 100%;\r\n  border: none;\r\n  background-color: var(--primary);\r\n  padding: 10px;\r\n  font-weight: bold;\r\n  font-size: 15px;\r\n  color: var(--primary-text);\r\n  width: 30px;\r\n  height: 30px;\r\n  cursor: pointer;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\r\n  -webkit-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\r\n  -moz-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\r\n  :active {\r\n    box-shadow: none;\r\n    -webkit-box-shadow: none;\r\n    -moz-box-shadow: none;\r\n  }\r\n`;\r\n\r\nexport const ResponsiveWrapper = styled.div `\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  justify-content: stretched;\r\n  align-items: stretched;\r\n  width: 100%;\r\n  @media (min-width: 767px) {\r\n    flex-direction: row;\r\n  }\r\n`;\r\n\r\nexport const StyledLogo = styled.img `\r\n  width: 200px;\r\n  @media (min-width: 767px) {\r\n    width: 300px;\r\n  }\r\n  transition: width 0.5s;\r\n  transition: height 0.5s;\r\n`;\r\n\r\nexport const StyledImg = styled.img `\r\n  box-shadow: 0px 5px 11px 2px rgba(0, 0, 0, 0.7);\r\n  border: 4px dashed var(--secondary);\r\n  background-color: var(--accent);\r\n  border-radius: 100%;\r\n  width: 200px;\r\n  @media (min-width: 900px) {\r\n    width: 250px;\r\n  }\r\n  @media (min-width: 1000px) {\r\n    width: 300px;\r\n  }\r\n  transition: width 0.5s;\r\n`;\r\n\r\nexport const StyledLink = styled.a `\r\n  color: var(--secondary);\r\n  text-decoration: none;\r\n`;\r\n\r\nfunction App() {\r\n    const dispatch = useDispatch();\r\n    const blockchain = useSelector((state) => state.blockchain);\r\n    const data = useSelector((state) => state.data);\r\n    const [claimingNft, setClaimingNft] = useState(false);\r\n    const [feedback, setFeedback] = useState(`Click buy to mint your NFT.`);\r\n    const [mintAmount, setMintAmount] = useState(1);\r\n    const [CONFIG, SET_CONFIG] = useState({\r\n        CONTRACT_ADDRESS: \"\",\r\n        SCAN_LINK: \"\",\r\n        NETWORK: {\r\n            NAME: \"\",\r\n            SYMBOL: \"\",\r\n            ID: 0,\r\n        },\r\n        NFT_NAME: \"\",\r\n        SYMBOL: \"\",\r\n        MAX_SUPPLY: 1,\r\n        WEI_COST: 0,\r\n        DISPLAY_COST: 0,\r\n        GAS_LIMIT: 0,\r\n        MARKETPLACE: \"\",\r\n        MARKETPLACE_LINK: \"\",\r\n        SHOW_BACKGROUND: false,\r\n    });\r\n\r\n    const claimNFTs = () => {\r\n        let cost = CONFIG.WEI_COST;\r\n        let gasLimit = CONFIG.GAS_LIMIT;\r\n        let totalCostWei = String(cost * mintAmount);\r\n        let totalGasLimit = String(gasLimit * mintAmount);\r\n        console.log(\"Cost: \", totalCostWei);\r\n        console.log(\"Gas limit: \", totalGasLimit);\r\n        setFeedback(`Minting your ${CONFIG.NFT_NAME}...`);\r\n        setClaimingNft(true);\r\n        blockchain.smartContract.methods\r\n            .mint(mintAmount)\r\n            .send({\r\n                gasLimit: String(totalGasLimit),\r\n                to: CONFIG.CONTRACT_ADDRESS,\r\n                from: blockchain.account,\r\n                value: totalCostWei,\r\n            })\r\n            .once(\"error\", (err) => {\r\n                console.log(err);\r\n                setFeedback(\"Sorry, something went wrong please try again later.\");\r\n                setClaimingNft(false);\r\n            })\r\n            .then((receipt) => {\r\n                console.log(receipt);\r\n                setFeedback(\r\n                    `WOW, the ${CONFIG.NFT_NAME} is yours! go visit NFTrade.com to view it.`\r\n                );\r\n                setClaimingNft(false);\r\n                dispatch(fetchData(blockchain.account));\r\n            });\r\n    };\r\n\r\n    const decrementMintAmount = () => {\r\n        let newMintAmount = mintAmount - 1;\r\n        if (newMintAmount < 1) {\r\n            newMintAmount = 1;\r\n        }\r\n        setMintAmount(newMintAmount);\r\n    };\r\n\r\n    const incrementMintAmount = () => {\r\n        let newMintAmount = mintAmount + 1;\r\n        if (newMintAmount > 1) {\r\n            newMintAmount = 1;\r\n        }\r\n        setMintAmount(newMintAmount);\r\n    };\r\n\r\n    const getData = () => {\r\n        if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\r\n            dispatch(fetchData(blockchain.account));\r\n        }\r\n    };\r\n\r\n    const getConfig = async() => {\r\n        const configResponse = await fetch(\"/config/config.json\", {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Accept: \"application/json\",\r\n            },\r\n        });\r\n        const config = await configResponse.json();\r\n        SET_CONFIG(config);\r\n    };\r\n\r\n    useEffect(() => {\r\n        getConfig();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        getData();\r\n    }, [blockchain.account]);\r\n\r\n    return ( <\r\n            s.Screen >\r\n            <\r\n            s.Container flex = { 1 }\r\n            ai = { \"center\" }\r\n            style = {\r\n                { padding: 24, backgroundColor: \"var(--primary)\" }\r\n            }\r\n            image = { CONFIG.SHOW_BACKGROUND ? \"/config/images/bg.png\" : null } > { /*        <StyledLogo alt={\"logo\"} src={\"/config/images/logo.png\"} /> */ } <\r\n            s.SpacerSmall / >\r\n            <\r\n            ResponsiveWrapper flex = { 1 }\r\n            style = {\r\n                { padding: 24 }\r\n            }\r\n            test >\r\n            <\r\n            s.Container flex = { 1 }\r\n            jc = { \"center\" }\r\n            ai = { \"center\" } >\r\n            <\r\n            StyledImg alt = { \"example\" }\r\n            src = { \"/config/images/example.gif\" }\r\n            /> < /\r\n            s.Container > <\r\n            s.SpacerLarge / >\r\n            <\r\n            s.Container flex = { 2 }\r\n            jc = { \"center\" }\r\n            ai = { \"center\" }\r\n            style = {\r\n                {\r\n                    backgroundColor: \"var(--accent)\",\r\n                    padding: 24,\r\n                    borderRadius: 24,\r\n                    border: \"4px dashed var(--secondary)\",\r\n                    boxShadow: \"0px 5px 11px 2px rgba(0,0,0,0.7)\",\r\n                }\r\n            } >\r\n            <\r\n            s.TextTitle style = {\r\n                {\r\n                    textAlign: \"center\",\r\n                    fontSize: 50,\r\n                    fontWeight: \"bold\",\r\n                    color: \"var(--accent-text)\",\r\n                }\r\n            } > { data.totalSupply }\r\n            / {CONFIG.MAX_SUPPLY} < /\r\n            s.TextTitle > <\r\n            s.TextDescription style = {\r\n                {\r\n                    textAlign: \"center\",\r\n                    color: \"var(--primary-text)\",\r\n                }\r\n            } >\r\n            <\r\n            StyledLink target = { \"_blank\" }\r\n            href = { CONFIG.SCAN_LINK } > { truncate(CONFIG.CONTRACT_ADDRESS, 15) } <\r\n            /StyledLink> < /\r\n            s.TextDescription > <\r\n            s.SpacerSmall / > {\r\n                Number(data.totalSupply) >= CONFIG.MAX_SUPPLY ? ( <\r\n                    >\r\n                    <\r\n                    s.TextTitle style = {\r\n                        { textAlign: \"center\", color: \"var(--accent-text)\" }\r\n                    } >\r\n                    The sale has ended. <\r\n                    /s.TextTitle> <\r\n                    s.TextDescription style = {\r\n                        { textAlign: \"center\", color: \"var(--accent-text)\" }\r\n                    } >\r\n                    You can still find { CONFIG.NFT_NAME }\r\n                    on <\r\n                    /s.TextDescription> <\r\n                    s.SpacerSmall / >\r\n                    <\r\n                    StyledLink target = { \"_blank\" }\r\n                    href = { CONFIG.MARKETPLACE_LINK } > { CONFIG.MARKETPLACE } <\r\n                    /StyledLink> < / >\r\n                ) : ( <\r\n                        >\r\n                        <\r\n                        s.TextTitle style = {\r\n                            { textAlign: \"center\", color: \"var(--accent-text)\" }\r\n                        } >\r\n                        1 { CONFIG.SYMBOL }\r\n                        costs { CONFIG.DISPLAY_COST } { \" \" } { CONFIG.NETWORK.SYMBOL }. <\r\n                        /s.TextTitle> <\r\n                        s.SpacerXSmall / >\r\n                        <\r\n                        s.TextDescription style = {\r\n                            { textAlign: \"center\", color: \"var(--accent-text)\" }\r\n                        } >\r\n                        Excluding gas fees. <\r\n                        /s.TextDescription> <\r\n                        s.SpacerSmall / > {\r\n                            blockchain.account === \"\" ||\r\n                            blockchain.smartContract === null ? ( <\r\n                                s.Container ai = { \"center\" }\r\n                                jc = { \"center\" } >\r\n                                <\r\n                                s.TextDescription style = {\r\n                                    {\r\n                                        textAlign: \"center\",\r\n                                        color: \"var(--accent-text)\",\r\n                                    }\r\n                                } >\r\n                                Connect to the { CONFIG.NETWORK.NAME }\r\n                                network <\r\n                                /s.TextDescription> <\r\n                                s.SpacerSmall / >\r\n                                <\r\n                                StyledButton onClick = {\r\n                                    (e) => {\r\n                                        e.preventDefault();\r\n                                        dispatch(connect());\r\n                                        getData();\r\n                                    }\r\n                                } >\r\n                                CONNECT <\r\n                                /StyledButton> {\r\n                                blockchain.errorMsg !== \"\" ? ( <\r\n                                    >\r\n                                    <\r\n                                    s.SpacerSmall / >\r\n                                    <\r\n                                    s.TextDescription style = {\r\n                                        {\r\n                                            textAlign: \"center\",\r\n                                            color: \"var(--accent-text)\",\r\n                                        }\r\n                                    } > { blockchain.errorMsg } <\r\n                                    /s.TextDescription> < / >\r\n                                ) : null\r\n                            } <\r\n                            /s.Container>\r\n                        ): ( <\r\n                            >\r\n                            <\r\n                            s.TextDescription style = {\r\n                                {\r\n                                    textAlign: \"center\",\r\n                                    color: \"var(--accent-text)\",\r\n                                }\r\n                            } > { feedback } <\r\n                            /s.TextDescription> <\r\n                            s.SpacerMedium / >\r\n                            <\r\n                            s.Container ai = { \"center\" }\r\n                            jc = { \"center\" }\r\n                            fd = { \"row\" } >\r\n                            <\r\n                            StyledRoundButton style = {\r\n                                { lineHeight: 0.4 }\r\n                            }\r\n                            disabled = { claimingNft ? 1 : 0 }\r\n                            onClick = {\r\n                                (e) => {\r\n                                    e.preventDefault();\r\n                                    decrementMintAmount();\r\n                                }\r\n                            } >\r\n                            -\r\n                            <\r\n                            /StyledRoundButton> <\r\n                            s.SpacerMedium / >\r\n                            <\r\n                            s.TextDescription style = {\r\n                                {\r\n                                    textAlign: \"center\",\r\n                                    color: \"var(--accent-text)\",\r\n                                }\r\n                            } > { mintAmount } <\r\n                            /s.TextDescription> <\r\n                            s.SpacerMedium / >\r\n                            <\r\n                            StyledRoundButton disabled = { claimingNft ? 1 : 0 }\r\n                            onClick = {\r\n                                (e) => {\r\n                                    e.preventDefault();\r\n                                    incrementMintAmount();\r\n                                }\r\n                            } >\r\n                            +\r\n                            <\r\n                            /StyledRoundButton> < /\r\n                            s.Container > <\r\n                            s.SpacerSmall / >\r\n                            <\r\n                            s.Container ai = { \"center\" }\r\n                            jc = { \"center\" }\r\n                            fd = { \"row\" } >\r\n                            <\r\n                            StyledButton disabled = { claimingNft ? 1 : 0 }\r\n                            onClick = {\r\n                                (e) => {\r\n                                    e.preventDefault();\r\n                                    claimNFTs();\r\n                                    getData();\r\n                                }\r\n                            } > { claimingNft ? \"BUSY\" : \"BUY\" } <\r\n                            /StyledButton> < /\r\n                            s.Container > <\r\n                            />\r\n                        )\r\n                    } <\r\n                    />\r\n            )\r\n        } <\r\n        s.SpacerMedium / >\r\n        <\r\n        /s.Container> <\r\n    s.SpacerLarge / >\r\n        <\r\n        s.Container flex = { 1 }\r\n    jc = { \"center\" }\r\n    ai = { \"center\" } >\r\n        <\r\n        StyledImg alt = { \"example\" }\r\n    src = { \"/config/images/example_1.gif\" }\r\n    /> < /\r\n    s.Container > <\r\n        /ResponsiveWrapper> <\r\n    s.SpacerMedium / >\r\n        <\r\n        s.Container jc = { \"center\" }\r\n    ai = { \"center\" }\r\n    style = {\r\n            { width: \"70%\" }\r\n        } >\r\n        <\r\n        s.TextDescription style = {\r\n            {\r\n                textAlign: \"center\",\r\n                color: \"var(--primary-text)\",\r\n            }\r\n        } >\r\n        Please make sure you are connected to the right network({ CONFIG.NETWORK.NAME }\r\n            Mainnet) and the correct address.\r\n    Please note:\r\n        Once you make the purchase, you cannot undo this action. <\r\n        /s.TextDescription> <\r\n    s.SpacerSmall / >\r\n        <\r\n        s.TextDescription style = {\r\n            {\r\n                textAlign: \"center\",\r\n                color: \"var(--primary-text)\",\r\n            }\r\n        } >\r\n        We have set the gas limit to { CONFIG.GAS_LIMIT }\r\n\r\n    for the contract to successfully mint your NFT.\r\n    We recommend that you don 't lower the\r\n    gas limit. <\r\n        /s.TextDescription> < /\r\n    s.Container > <\r\n        /s.Container> < /\r\n    s.Screen >\r\n);\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport store from \"./redux/store\";\r\nimport { Provider } from \"react-redux\";\r\nimport \"./styles/reset.css\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}